use crate::disassembler::RegisterState;

#[derive(Debug, Clone, Copy)]
pub enum AddressingMode {
    Implied,
    ImmediateMFlag,
    ImmediateXFlag,
    ImmediateByte,
    PcRelative,
    PcRelativeLong,
    Direct,
    DirectIndexedX,
    DirectIndexedY,
    Indirect,
    IndexedIndirectX,
    IndirectIndexedY,
    IndirectLong,
    IndirectIndexedYLong,
    Absolute,
    AbsoluteX,
    AbsoluteY,
    AbsoluteLong,
    AbsoluteLongX,
    StackRelative,
    StackRelativeIndirectIndexed,
    AbsoluteIndirect,
    AbsoluteIndirectLong,
    AbsoluteIndirectIndexed,
    BlockMove,
}

impl AddressingMode {
    pub fn operand_bytes(&self, register_state: &RegisterState) -> usize {
        match *self {
            Implied => 0,
            ImmediateMFlag => 2 - register_state.m as usize,
            ImmediateXFlag => 2 - register_state.x as usize,
            ImmediateByte => 1,
            PcRelative => 1,
            PcRelativeLong => 2,
            Direct => 1,
            DirectIndexedX => 1,
            DirectIndexedY => 1,
            Indirect => 1,
            IndexedIndirectX => 1,
            IndirectIndexedY => 1,
            IndirectLong => 1,
            IndirectIndexedYLong => 1,
            Absolute => 2,
            AbsoluteX => 2,
            AbsoluteY => 2,
            AbsoluteLong => 3,
            AbsoluteLongX => 3,
            StackRelative => 1,
            StackRelativeIndirectIndexed => 1,
            AbsoluteIndirect => 2,
            AbsoluteIndirectLong => 2,
            AbsoluteIndirectIndexed => 2,
            BlockMove => 2,
        }
    }
}

#[derive(Debug, Clone, Copy)]
pub struct InstructionData {
    pub mnemonic: &'static str,
    pub mode: AddressingMode,
}

use AddressingMode::*;
#[rustfmt::skip]
pub const INSTRUCTION_DATA: [InstructionData; 256] = [
    //0x00 - 0x0f
    InstructionData { mnemonic: "BRK", mode: ImmediateByte },
    InstructionData { mnemonic: "ORA", mode: IndexedIndirectX },
    InstructionData { mnemonic: "COP", mode: ImmediateByte },
    InstructionData { mnemonic: "ORA", mode: StackRelative },
    InstructionData { mnemonic: "TSB", mode: Direct },
    InstructionData { mnemonic: "ORA", mode: Direct },
    InstructionData { mnemonic: "ASL", mode: Direct },
    InstructionData { mnemonic: "ORA", mode: IndirectLong },
    InstructionData { mnemonic: "PHP", mode: Implied },
    InstructionData { mnemonic: "ORA", mode: ImmediateMFlag },
    InstructionData { mnemonic: "ASL", mode: Implied },
    InstructionData { mnemonic: "PHD", mode: Implied },
    InstructionData { mnemonic: "TSB", mode: Absolute },
    InstructionData { mnemonic: "ORA", mode: Absolute },
    InstructionData { mnemonic: "ASL", mode: Absolute },
    InstructionData { mnemonic: "ORA", mode: AbsoluteLong },
    //mnemonic: 0x10 - 0x1f
    InstructionData { mnemonic: "BPL", mode: PcRelative },
    InstructionData { mnemonic: "ORA", mode: IndirectIndexedY },
    InstructionData { mnemonic: "ORA", mode: Indirect },
    InstructionData { mnemonic: "ORA", mode: StackRelativeIndirectIndexed },
    InstructionData { mnemonic: "TRB", mode: Direct },
    InstructionData { mnemonic: "ORA", mode: DirectIndexedX },
    InstructionData { mnemonic: "ASL", mode: DirectIndexedX },
    InstructionData { mnemonic: "ORA", mode: IndirectIndexedYLong },
    InstructionData { mnemonic: "CLC", mode: Implied },
    InstructionData { mnemonic: "ORA", mode: AbsoluteY },
    InstructionData { mnemonic: "INC", mode: Implied },
    InstructionData { mnemonic: "TCS", mode: Implied },
    InstructionData { mnemonic: "TRB", mode: Absolute },
    InstructionData { mnemonic: "ORA", mode: AbsoluteX },
    InstructionData { mnemonic: "ASL", mode: AbsoluteX },
    InstructionData { mnemonic: "ORA", mode: AbsoluteLongX },
    //mnemonic: 0x20 - 0x2f
    InstructionData { mnemonic: "JSR", mode: Absolute },
    InstructionData { mnemonic: "AND", mode: IndexedIndirectX },
    InstructionData { mnemonic: "JSL", mode: AbsoluteLong },
    InstructionData { mnemonic: "AND", mode: StackRelative },
    InstructionData { mnemonic: "BIT", mode: Direct },
    InstructionData { mnemonic: "AND", mode: Direct },
    InstructionData { mnemonic: "ROL", mode: Direct },
    InstructionData { mnemonic: "AND", mode: IndirectLong },
    InstructionData { mnemonic: "PLP", mode: Implied },
    InstructionData { mnemonic: "AND", mode: ImmediateMFlag },
    InstructionData { mnemonic: "ROL", mode: Implied },
    InstructionData { mnemonic: "PLD", mode: Implied },
    InstructionData { mnemonic: "BIT", mode: Absolute },
    InstructionData { mnemonic: "AND", mode: Absolute },
    InstructionData { mnemonic: "ROL", mode: Absolute },
    InstructionData { mnemonic: "AND", mode: AbsoluteLong },
    //mnemonic: 0x30 - 0x3f
    InstructionData { mnemonic: "BMI", mode: PcRelative },
    InstructionData { mnemonic: "AND", mode: IndirectIndexedY },
    InstructionData { mnemonic: "AND", mode: Indirect },
    InstructionData { mnemonic: "AND", mode: StackRelativeIndirectIndexed },
    InstructionData { mnemonic: "BIT", mode: DirectIndexedX },
    InstructionData { mnemonic: "AND", mode: DirectIndexedX },
    InstructionData { mnemonic: "ROL", mode: DirectIndexedX },
    InstructionData { mnemonic: "AND", mode: IndirectIndexedYLong },
    InstructionData { mnemonic: "SEC", mode: Implied },
    InstructionData { mnemonic: "AND", mode: AbsoluteY },
    InstructionData { mnemonic: "DEC", mode: Implied },
    InstructionData { mnemonic: "TSC", mode: Implied },
    InstructionData { mnemonic: "BIT", mode: AbsoluteX },
    InstructionData { mnemonic: "AND", mode: AbsoluteX },
    InstructionData { mnemonic: "ROL", mode: AbsoluteX },
    InstructionData { mnemonic: "AND", mode: AbsoluteLongX },
    //mnemonic: 0x40 - 0x4f
    InstructionData { mnemonic: "RTI", mode: Implied },
    InstructionData { mnemonic: "EOR", mode: IndexedIndirectX },
    InstructionData { mnemonic: "WDM", mode: ImmediateByte },
    InstructionData { mnemonic: "EOR", mode: StackRelative },
    InstructionData { mnemonic: "MVP", mode: BlockMove },
    InstructionData { mnemonic: "EOR", mode: Direct },
    InstructionData { mnemonic: "LSR", mode: Direct },
    InstructionData { mnemonic: "EOR", mode: IndirectLong },
    InstructionData { mnemonic: "PHA", mode: Implied },
    InstructionData { mnemonic: "EOR", mode: ImmediateMFlag },
    InstructionData { mnemonic: "LSR", mode: Implied },
    InstructionData { mnemonic: "PHK", mode: Implied },
    InstructionData { mnemonic: "JMP", mode: Absolute },
    InstructionData { mnemonic: "EOR", mode: Absolute },
    InstructionData { mnemonic: "LSR", mode: Absolute },
    InstructionData { mnemonic: "EOR", mode: AbsoluteLong },
    //mnemonic: 0x50 - 0x5f
    InstructionData { mnemonic: "BVC", mode: PcRelative },
    InstructionData { mnemonic: "EOR", mode: IndirectIndexedY },
    InstructionData { mnemonic: "EOR", mode: Indirect },
    InstructionData { mnemonic: "EOR", mode: StackRelativeIndirectIndexed },
    InstructionData { mnemonic: "MVN", mode: BlockMove },
    InstructionData { mnemonic: "EOR", mode: DirectIndexedX },
    InstructionData { mnemonic: "LSR", mode: DirectIndexedX },
    InstructionData { mnemonic: "EOR", mode: IndirectIndexedYLong },
    InstructionData { mnemonic: "CLI", mode: Implied },
    InstructionData { mnemonic: "EOR", mode: AbsoluteY },
    InstructionData { mnemonic: "PHY", mode: Implied },
    InstructionData { mnemonic: "TCD", mode: Implied },
    InstructionData { mnemonic: "JML", mode: AbsoluteLong },
    InstructionData { mnemonic: "EOR", mode: AbsoluteX },
    InstructionData { mnemonic: "LSR", mode: AbsoluteX },
    InstructionData { mnemonic: "EOR", mode: AbsoluteLongX },
    //mnemonic: 0x60 - 0x6f
    InstructionData { mnemonic: "RTS", mode: Implied },
    InstructionData { mnemonic: "ADC", mode: IndexedIndirectX },
    InstructionData { mnemonic: "PER", mode: Absolute },
    InstructionData { mnemonic: "ADC", mode: StackRelative },
    InstructionData { mnemonic: "STZ", mode: Direct },
    InstructionData { mnemonic: "ADC", mode: Direct },
    InstructionData { mnemonic: "ROR", mode: Direct },
    InstructionData { mnemonic: "ADC", mode: IndirectLong },
    InstructionData { mnemonic: "PLA", mode: Implied },
    InstructionData { mnemonic: "ADC", mode: ImmediateMFlag },
    InstructionData { mnemonic: "ROR", mode: Implied },
    InstructionData { mnemonic: "RTL", mode: Implied },
    InstructionData { mnemonic: "JMP", mode: AbsoluteIndirect },
    InstructionData { mnemonic: "ADC", mode: Absolute },
    InstructionData { mnemonic: "ROR", mode: Absolute },
    InstructionData { mnemonic: "ADC", mode: AbsoluteLong },
    //mnemonic: 0x70 - 0x7f
    InstructionData { mnemonic: "BVS", mode: PcRelative },
    InstructionData { mnemonic: "ADC", mode: IndirectIndexedY },
    InstructionData { mnemonic: "ADC", mode: Indirect },
    InstructionData { mnemonic: "ADC", mode: StackRelativeIndirectIndexed },
    InstructionData { mnemonic: "STZ", mode: DirectIndexedX },
    InstructionData { mnemonic: "ADC", mode: DirectIndexedX },
    InstructionData { mnemonic: "ROR", mode: DirectIndexedX },
    InstructionData { mnemonic: "ADC", mode: IndirectIndexedYLong },
    InstructionData { mnemonic: "SEI", mode: Implied },
    InstructionData { mnemonic: "ADC", mode: AbsoluteY },
    InstructionData { mnemonic: "PLY", mode: Implied },
    InstructionData { mnemonic: "TDC", mode: Implied },
    InstructionData { mnemonic: "JMP", mode: AbsoluteIndirectIndexed },
    InstructionData { mnemonic: "ADC", mode: AbsoluteX },
    InstructionData { mnemonic: "ROR", mode: AbsoluteX },
    InstructionData { mnemonic: "ADC", mode: AbsoluteLongX },
    //mnemonic: 0x80 - 0x8f
    InstructionData { mnemonic: "BRA", mode: PcRelative },
    InstructionData { mnemonic: "STA", mode: IndexedIndirectX },
    InstructionData { mnemonic: "BRL", mode: PcRelativeLong },
    InstructionData { mnemonic: "STA", mode: StackRelative },
    InstructionData { mnemonic: "STY", mode: Direct },
    InstructionData { mnemonic: "STA", mode: Direct },
    InstructionData { mnemonic: "STX", mode: Direct },
    InstructionData { mnemonic: "STA", mode: IndirectLong },
    InstructionData { mnemonic: "DEY", mode: Implied },
    InstructionData { mnemonic: "BIT", mode: ImmediateMFlag },
    InstructionData { mnemonic: "TXA", mode: Implied },
    InstructionData { mnemonic: "PHB", mode: Implied },
    InstructionData { mnemonic: "STY", mode: Absolute },
    InstructionData { mnemonic: "STA", mode: Absolute },
    InstructionData { mnemonic: "STX", mode: Absolute },
    InstructionData { mnemonic: "STA", mode: AbsoluteLong },
    //mnemonic: 0x90 - 0x9f
    InstructionData { mnemonic: "BCC", mode: PcRelative },
    InstructionData { mnemonic: "STA", mode: IndirectIndexedY },
    InstructionData { mnemonic: "STA", mode: Indirect },
    InstructionData { mnemonic: "STA", mode: StackRelativeIndirectIndexed },
    InstructionData { mnemonic: "STY", mode: DirectIndexedX },
    InstructionData { mnemonic: "STA", mode: DirectIndexedX },
    InstructionData { mnemonic: "STX", mode: DirectIndexedY },
    InstructionData { mnemonic: "STA", mode: IndirectIndexedYLong },
    InstructionData { mnemonic: "TYA", mode: Implied },
    InstructionData { mnemonic: "STA", mode: AbsoluteY },
    InstructionData { mnemonic: "TXS", mode: Implied },
    InstructionData { mnemonic: "TXY", mode: Implied },
    InstructionData { mnemonic: "STZ", mode: Absolute },
    InstructionData { mnemonic: "STA", mode: AbsoluteX },
    InstructionData { mnemonic: "STZ", mode: AbsoluteX },
    InstructionData { mnemonic: "STA", mode: AbsoluteLongX },
    //mnemonic: 0xa0 - 0xaf
    InstructionData { mnemonic: "LDY", mode: ImmediateXFlag },
    InstructionData { mnemonic: "LDA", mode: IndexedIndirectX },
    InstructionData { mnemonic: "LDX", mode: ImmediateXFlag },
    InstructionData { mnemonic: "LDA", mode: StackRelative },
    InstructionData { mnemonic: "LDY", mode: Direct },
    InstructionData { mnemonic: "LDA", mode: Direct },
    InstructionData { mnemonic: "LDX", mode: Direct },
    InstructionData { mnemonic: "LDA", mode: IndirectLong },
    InstructionData { mnemonic: "TAY", mode: Implied },
    InstructionData { mnemonic: "LDA", mode: ImmediateMFlag },
    InstructionData { mnemonic: "TAX", mode: Implied },
    InstructionData { mnemonic: "PLB", mode: Implied },
    InstructionData { mnemonic: "LDY", mode: Absolute },
    InstructionData { mnemonic: "LDA", mode: Absolute },
    InstructionData { mnemonic: "LDX", mode: Absolute },
    InstructionData { mnemonic: "LDA", mode: AbsoluteLong },
    //mnemonic: 0xb0 - 0xbf
    InstructionData { mnemonic: "BCS", mode: PcRelative },
    InstructionData { mnemonic: "LDA", mode: IndirectIndexedY },
    InstructionData { mnemonic: "LDA", mode: Indirect },
    InstructionData { mnemonic: "LDA", mode: StackRelativeIndirectIndexed },
    InstructionData { mnemonic: "LDY", mode: DirectIndexedX },
    InstructionData { mnemonic: "LDA", mode: DirectIndexedX },
    InstructionData { mnemonic: "LDX", mode: DirectIndexedY },
    InstructionData { mnemonic: "LDA", mode: IndirectIndexedYLong },
    InstructionData { mnemonic: "CLV", mode: Implied },
    InstructionData { mnemonic: "LDA", mode: AbsoluteY },
    InstructionData { mnemonic: "TSX", mode: Implied },
    InstructionData { mnemonic: "TYX", mode: Implied },
    InstructionData { mnemonic: "LDY", mode: AbsoluteX },
    InstructionData { mnemonic: "LDA", mode: AbsoluteX },
    InstructionData { mnemonic: "LDX", mode: AbsoluteY },
    InstructionData { mnemonic: "LDA", mode: AbsoluteLongX },
    //mnemonic: 0xc0 - 0xcf
    InstructionData { mnemonic: "CPY", mode: ImmediateXFlag },
    InstructionData { mnemonic: "CMP", mode: IndexedIndirectX },
    InstructionData { mnemonic: "REP", mode: ImmediateByte },
    InstructionData { mnemonic: "CMP", mode: StackRelative },
    InstructionData { mnemonic: "CPY", mode: Direct },
    InstructionData { mnemonic: "CMP", mode: Direct },
    InstructionData { mnemonic: "DEC", mode: Direct },
    InstructionData { mnemonic: "CMP", mode: IndirectLong },
    InstructionData { mnemonic: "INY", mode: Implied },
    InstructionData { mnemonic: "CMP", mode: ImmediateMFlag },
    InstructionData { mnemonic: "DEX", mode: Implied },
    InstructionData { mnemonic: "WAI", mode: Implied },
    InstructionData { mnemonic: "CPY", mode: Absolute },
    InstructionData { mnemonic: "CMP", mode: Absolute },
    InstructionData { mnemonic: "DEC", mode: Absolute },
    InstructionData { mnemonic: "CMP", mode: AbsoluteLong },
    //mnemonic: 0xd0 - 0xdf
    InstructionData { mnemonic: "BNE", mode: PcRelative },
    InstructionData { mnemonic: "CMP", mode: IndirectIndexedY },
    InstructionData { mnemonic: "CMP", mode: Indirect },
    InstructionData { mnemonic: "CMP", mode: StackRelativeIndirectIndexed },
    InstructionData { mnemonic: "PEI", mode: Indirect },
    InstructionData { mnemonic: "CMP", mode: DirectIndexedX },
    InstructionData { mnemonic: "DEC", mode: DirectIndexedX },
    InstructionData { mnemonic: "CMP", mode: IndirectIndexedYLong },
    InstructionData { mnemonic: "CLD", mode: Implied },
    InstructionData { mnemonic: "CMP", mode: AbsoluteY },
    InstructionData { mnemonic: "PHX", mode: Implied },
    InstructionData { mnemonic: "STP", mode: Implied },
    InstructionData { mnemonic: "JMP", mode: AbsoluteIndirectLong },
    InstructionData { mnemonic: "CMP", mode: AbsoluteX },
    InstructionData { mnemonic: "DEC", mode: AbsoluteX },
    InstructionData { mnemonic: "CMP", mode: AbsoluteLongX },
    //mnemonic: 0xe0 - 0xef
    InstructionData { mnemonic: "CPX", mode: ImmediateXFlag },
    InstructionData { mnemonic: "SBC", mode: IndexedIndirectX },
    InstructionData { mnemonic: "SEP", mode: ImmediateByte },
    InstructionData { mnemonic: "SBC", mode: StackRelative },
    InstructionData { mnemonic: "CPX", mode: Direct },
    InstructionData { mnemonic: "SBC", mode: Direct },
    InstructionData { mnemonic: "INC", mode: Direct },
    InstructionData { mnemonic: "SBC", mode: IndirectLong },
    InstructionData { mnemonic: "INX", mode: Implied },
    InstructionData { mnemonic: "SBC", mode: ImmediateMFlag },
    InstructionData { mnemonic: "NOP", mode: Implied },
    InstructionData { mnemonic: "XBA", mode: Implied },
    InstructionData { mnemonic: "CPX", mode: Absolute },
    InstructionData { mnemonic: "SBC", mode: Absolute },
    InstructionData { mnemonic: "INC", mode: Absolute },
    InstructionData { mnemonic: "SBC", mode: AbsoluteLong },
    //mnemonic: 0xf0 - 0xff
    InstructionData { mnemonic: "BEQ", mode: PcRelative },
    InstructionData { mnemonic: "SBC", mode: IndirectIndexedY },
    InstructionData { mnemonic: "SBC", mode: Indirect },
    InstructionData { mnemonic: "SBC", mode: StackRelativeIndirectIndexed },
    InstructionData { mnemonic: "PEA", mode: Absolute },
    InstructionData { mnemonic: "SBC", mode: DirectIndexedX },
    InstructionData { mnemonic: "INC", mode: DirectIndexedX },
    InstructionData { mnemonic: "SBC", mode: IndirectIndexedYLong },
    InstructionData { mnemonic: "SED", mode: Implied },
    InstructionData { mnemonic: "SBC", mode: AbsoluteY },
    InstructionData { mnemonic: "PLX", mode: Implied },
    InstructionData { mnemonic: "XCE", mode: Implied },
    InstructionData { mnemonic: "JSR", mode: AbsoluteIndirectIndexed },
    InstructionData { mnemonic: "SBC", mode: AbsoluteX },
    InstructionData { mnemonic: "INC", mode: AbsoluteX },
    InstructionData { mnemonic: "SBC", mode: AbsoluteLongX },
];
