// use crate::disassembler::SmpAnalysisState;

// TODO: This could potentially be simplified, as many of these are just ordered pairs of a few modes
#[derive(Debug, Clone, Copy)]
pub enum SmpAddressingMode {
    Implied,
    Acc,
    X,
    Y,
    Ya,
    XA,
    YA,
    AX,
    AY,
    XSp,
    SpX,
    YaX,
    PSW,
    AccImmediate,
    XImmediate,
    YImmediate,
    PcRelative,
    YRelative,
    Direct,
    DirectX,
    DirectY,
    DirectYa,
    DirectDirect,
    DirectImmediate,
    AccDirect,
    DirectAcc,
    XDirect,
    YDirect,
    YaDirect,
    XIndexedDirect,
    XYIndexedDirect,
    YXIndexedDirect,
    DirectRelative,
    XIndexedDirectRelative,
    DirectRelativeBit(u8),
    AccXIndexedDirect,
    XIndexedDirectAcc,
    XIndexedIndirectAcc,
    YIndexedDirectX,
    XIndexedDirectY,
    AccIndirectX,
    IndirectXAcc,
    IndirectXIndirectY,
    AccXIndexedIndirect,
    AccYIndexedIndirect,
    YIndexedIndirectAcc,
    IndirectIncrementXAcc,
    AccIndirectIncrementX,
    Absolute,
    AccAbsolute,
    XAbsolute,
    YAbsolute,
    AbsoluteX,
    AccAbsoluteX,
    AbsoluteXAcc,
    AbsoluteYAcc,
    AbsoluteY,
    AccAbsoluteY,
    AbsoluteAcc,
    AbsoluteIndirectX,
    CarryAbsoluteBit,
    AbsoluteBitCarry,
    CarryAbsoluteNotBit,
    TVector(u8),
    PVector,
}

impl SmpAddressingMode {
    pub(in crate::disassembler) fn operand_bytes(&self) -> usize {
        match *self {
            _ => 0, // DO NOT SUBMIT
        }
    }

    // pub fn is_indirect(&self) -> bool {
    //     matches!(
    //         *self,
    //         IndexedIndirectX
    //             | IndirectIndexedY
    //             | IndirectLong
    //             | IndirectIndexedYLong
    //             | StackRelativeIndirectIndexed
    //             | AbsoluteIndirect
    //             | AbsoluteIndirectLong
    //             | AbsoluteIndirectIndexed
    //     )
    // }
}

#[rustfmt::skip]
#[derive(Debug, Clone, Copy)]
pub enum SmpInstruction {
    ADC, ADDW, AND, AND1, ASL, BBC0, BBC1, BBC2, BBC3, BBC4,
    BBC5, BBC6, BBC7, BBS0, BBS1, BBS2, BBS3, BBS4, BBS5, BBS6,
    BBS7, BCC, BCS, BEQ, BMI, BNE, BPL, BRA, BRK, BVC,
    BVS, CALL, CBNE, CLR0, CLR1, CLR2, CLR3, CLR4, CLR5, CLR6,
    CLR7, CLRC, CLRP, CLRV, CMP, CMPW, DAA, DAS, DBNZ, DEC,
    DECW, DI, DIV, EI, EOR, EOR1, INC, INCW, JMP, LSR, MOV,
    MOV1, MOVW, MUL, NOP, NOT1, NOTC, OR, OR1, PCALL, POP,
    PUSH, RET, RETI, ROL, ROR, SBC, SET0, SET1, SET2, SET3,
    SET4, SET5, SET6, SET7, SETC, SETP, SLEEP, STOP, SUBW,
    TCALL, TCLR, TSET, XCN
}

#[derive(Debug, Clone, Copy)]
pub struct SmpInstructionData {
    pub instruction: SmpInstruction,
    pub mode: SmpAddressingMode,
}

impl crate::disassembler::InstructionData<SmpAnalysisState> for SmpInstructionData {
    fn operand_bytes(&self, _analysis_state: &SmpAnalysisState) -> usize {
        self.mode.operand_bytes()
    }
}

impl SmpInstructionData {
    pub fn mnemonic(&self) -> String {
        format!("{:?}", self.instruction)
    }
}

use SmpAddressingMode::*;
use SmpInstruction::*;

use crate::disassembler::debug_smp::SmpAnalysisState;
#[rustfmt::skip]
pub const SMP_INSTRUCTION_DATA: [SmpInstructionData; 256] = [
  // 0x00 - 0x0f
  SmpInstructionData { instruction: NOP, mode: Implied },
  SmpInstructionData { instruction: TCALL, mode: TVector(0) },
  SmpInstructionData { instruction: SET0, mode: Direct },
  SmpInstructionData { instruction: BBS0, mode: DirectRelativeBit(0) },
  SmpInstructionData { instruction: OR, mode: AccDirect},
  SmpInstructionData { instruction: OR, mode: AccAbsolute },
  SmpInstructionData { instruction: OR, mode: AccIndirectX },
  SmpInstructionData { instruction: OR, mode: AccXIndexedIndirect },
  SmpInstructionData { instruction: OR, mode: AccImmediate },
  SmpInstructionData { instruction: OR, mode: DirectDirect },
  SmpInstructionData { instruction: OR1, mode: CarryAbsoluteBit },
  SmpInstructionData { instruction: ASL, mode: Direct },
  SmpInstructionData { instruction: ASL, mode: Absolute },
  SmpInstructionData { instruction: PUSH, mode: PSW },
  SmpInstructionData { instruction: TSET, mode: AbsoluteAcc },
  SmpInstructionData { instruction: BRK, mode: Implied },
  // 0x10 - 0x1f
  SmpInstructionData { instruction: BPL, mode: PcRelative },
  SmpInstructionData { instruction: TCALL, mode: TVector(1) },
  SmpInstructionData { instruction: CLR0, mode: Direct },
  SmpInstructionData { instruction: BBC0, mode: DirectRelativeBit(0) },
  SmpInstructionData { instruction: OR, mode: AccXIndexedDirect },
  SmpInstructionData { instruction: OR, mode: AccAbsoluteX },
  SmpInstructionData { instruction: OR, mode: AccAbsoluteY },
  SmpInstructionData { instruction: OR, mode: AccYIndexedIndirect },
  SmpInstructionData { instruction: OR, mode: DirectImmediate },
  SmpInstructionData { instruction: OR, mode: IndirectXIndirectY },
  SmpInstructionData { instruction: DECW, mode: Direct },
  SmpInstructionData { instruction: ASL, mode: XIndexedDirect },
  SmpInstructionData { instruction: ASL, mode: Acc },
  SmpInstructionData { instruction: DEC, mode: X },
  SmpInstructionData { instruction: CMP, mode: XAbsolute },
  SmpInstructionData { instruction: JMP, mode: AbsoluteIndirectX },
  // 0x20 - 0x2f
  SmpInstructionData { instruction: CLRP, mode: Implied },
  SmpInstructionData { instruction: TCALL, mode: TVector(2) },
  SmpInstructionData { instruction: SET1, mode: Direct },
  SmpInstructionData { instruction: BBS1, mode: DirectRelativeBit(1) },
  SmpInstructionData { instruction: AND, mode: AccDirect},
  SmpInstructionData { instruction: AND, mode: AccAbsolute },
  SmpInstructionData { instruction: AND, mode: AccIndirectX },
  SmpInstructionData { instruction: AND, mode: AccXIndexedIndirect },
  SmpInstructionData { instruction: AND, mode: AccImmediate },
  SmpInstructionData { instruction: AND, mode: DirectDirect },
  SmpInstructionData { instruction: OR1, mode: CarryAbsoluteNotBit },
  SmpInstructionData { instruction: ROL, mode: Direct },
  SmpInstructionData { instruction: ROL, mode: Absolute },
  SmpInstructionData { instruction: PUSH, mode: Acc },
  SmpInstructionData { instruction: CBNE, mode: DirectRelative },
  SmpInstructionData { instruction: BRA, mode: PcRelative },
  // 0x30 - 0x3f
  SmpInstructionData { instruction: BMI, mode: PcRelative },
  SmpInstructionData { instruction: TCALL, mode: TVector(3) },
  SmpInstructionData { instruction: CLR1, mode: Direct },
  SmpInstructionData { instruction: BBC1, mode: DirectRelativeBit(1) },
  SmpInstructionData { instruction: AND, mode: AccXIndexedDirect },
  SmpInstructionData { instruction: AND, mode: AccAbsoluteX },
  SmpInstructionData { instruction: AND, mode: AccAbsoluteY },
  SmpInstructionData { instruction: AND, mode: AccYIndexedIndirect },
  SmpInstructionData { instruction: AND, mode: DirectImmediate },
  SmpInstructionData { instruction: AND, mode: IndirectXIndirectY },
  SmpInstructionData { instruction: INCW, mode: Direct },
  SmpInstructionData { instruction: ROL, mode: XIndexedDirect },
  SmpInstructionData { instruction: ROL, mode: Acc },
  SmpInstructionData { instruction: INC, mode: X },
  SmpInstructionData { instruction: CMP, mode: XDirect },
  SmpInstructionData { instruction: CALL, mode: Absolute },
  // 0x40 - 0x4f
  SmpInstructionData { instruction: SETP, mode: Implied },
  SmpInstructionData { instruction: TCALL, mode: TVector(4) },
  SmpInstructionData { instruction: SET2, mode: Direct },
  SmpInstructionData { instruction: BBS2, mode: DirectRelativeBit(2) },
  SmpInstructionData { instruction: EOR, mode: AccDirect},
  SmpInstructionData { instruction: EOR, mode: AccAbsolute },
  SmpInstructionData { instruction: EOR, mode: AccIndirectX },
  SmpInstructionData { instruction: EOR, mode: AccXIndexedIndirect },
  SmpInstructionData { instruction: EOR, mode: AccImmediate },
  SmpInstructionData { instruction: EOR, mode: DirectDirect },
  SmpInstructionData { instruction: AND1, mode: CarryAbsoluteBit },
  SmpInstructionData { instruction: LSR, mode: Direct },
  SmpInstructionData { instruction: LSR, mode: Absolute },
  SmpInstructionData { instruction: PUSH, mode: X },
  SmpInstructionData { instruction: TCLR, mode: AbsoluteAcc },
  SmpInstructionData { instruction: PCALL, mode: PVector },
  // 0x50 - 0x5f
  SmpInstructionData { instruction: BVC, mode: PcRelative },
  SmpInstructionData { instruction: TCALL, mode: TVector(5) },
  SmpInstructionData { instruction: CLR2, mode: Direct },
  SmpInstructionData { instruction: BBC2, mode: DirectRelativeBit(2) },
  SmpInstructionData { instruction: EOR, mode: AccXIndexedDirect },
  SmpInstructionData { instruction: EOR, mode: AccAbsoluteX },
  SmpInstructionData { instruction: EOR, mode: AccAbsoluteY },
  SmpInstructionData { instruction: EOR, mode: AccYIndexedIndirect },
  SmpInstructionData { instruction: EOR, mode: DirectImmediate },
  SmpInstructionData { instruction: EOR, mode: IndirectXIndirectY },
  SmpInstructionData { instruction: CMPW, mode: YaDirect },
  SmpInstructionData { instruction: LSR, mode: XIndexedDirect },
  SmpInstructionData { instruction: LSR, mode: Acc },
  SmpInstructionData { instruction: MOV, mode: XA },
  SmpInstructionData { instruction: CMP, mode: YAbsolute },
  SmpInstructionData { instruction: JMP, mode: Absolute },
  // 0x60 - 0x6f
  SmpInstructionData { instruction: CLRC, mode: Implied },
  SmpInstructionData { instruction: TCALL, mode: TVector(6) },
  SmpInstructionData { instruction: SET3, mode: Direct },
  SmpInstructionData { instruction: BBS3, mode: DirectRelativeBit(3) },
  SmpInstructionData { instruction: CMP, mode: AccDirect},
  SmpInstructionData { instruction: CMP, mode: AccAbsolute },
  SmpInstructionData { instruction: CMP, mode: AccIndirectX },
  SmpInstructionData { instruction: CMP, mode: AccXIndexedIndirect },
  SmpInstructionData { instruction: CMP, mode: AccImmediate },
  SmpInstructionData { instruction: CMP, mode: DirectDirect },
  SmpInstructionData { instruction: AND1, mode: CarryAbsoluteNotBit },
  SmpInstructionData { instruction: ROR, mode: Direct },
  SmpInstructionData { instruction: ROR, mode: Absolute },
  SmpInstructionData { instruction: PUSH, mode: Y },
  SmpInstructionData { instruction: DBNZ, mode: DirectRelative },
  SmpInstructionData { instruction: RET, mode: Implied },
  // 0x70 - 0x7f
  SmpInstructionData { instruction: BVS, mode: PcRelative },
  SmpInstructionData { instruction: TCALL, mode: TVector(7) },
  SmpInstructionData { instruction: CLR3, mode: Direct },
  SmpInstructionData { instruction: BBC3, mode: DirectRelativeBit(3) },
  SmpInstructionData { instruction: CMP, mode: AccXIndexedDirect },
  SmpInstructionData { instruction: CMP, mode: AccAbsoluteX },
  SmpInstructionData { instruction: CMP, mode: AccAbsoluteY },
  SmpInstructionData { instruction: CMP, mode: AccYIndexedIndirect },
  SmpInstructionData { instruction: CMP, mode: DirectImmediate },
  SmpInstructionData { instruction: CMP, mode: IndirectXIndirectY },
  SmpInstructionData { instruction: ADDW, mode: YaDirect },
  SmpInstructionData { instruction: ROR, mode: XIndexedDirect },
  SmpInstructionData { instruction: ROR, mode: Acc },
  SmpInstructionData { instruction: MOV, mode: AX },
  SmpInstructionData { instruction: CMP, mode: YDirect },
  SmpInstructionData { instruction: RETI, mode: Implied },
  // 0x80 - 0x8f
  SmpInstructionData { instruction: SETC, mode: Implied },
  SmpInstructionData { instruction: TCALL, mode: TVector(8) },
  SmpInstructionData { instruction: SET4, mode: Direct },
  SmpInstructionData { instruction: BBS4, mode: DirectRelativeBit(4) },
  SmpInstructionData { instruction: ADC, mode: AccDirect},
  SmpInstructionData { instruction: ADC, mode: AccAbsolute },
  SmpInstructionData { instruction: ADC, mode: AccIndirectX },
  SmpInstructionData { instruction: ADC, mode: AccXIndexedIndirect },
  SmpInstructionData { instruction: ADC, mode: AccImmediate },
  SmpInstructionData { instruction: ADC, mode: DirectDirect },
  SmpInstructionData { instruction: EOR1, mode: CarryAbsoluteBit },
  SmpInstructionData { instruction: DEC, mode: Direct },
  SmpInstructionData { instruction: DEC, mode: Absolute },
  SmpInstructionData { instruction: MOV, mode: YImmediate },
  SmpInstructionData { instruction: POP, mode: PSW },
  SmpInstructionData { instruction: MOV, mode: DirectImmediate },
  // 0x90 - 0x9f
  SmpInstructionData { instruction: BCC, mode: PcRelative },
  SmpInstructionData { instruction: TCALL, mode: TVector(9) },
  SmpInstructionData { instruction: CLR4, mode: Direct },
  SmpInstructionData { instruction: BBC4, mode: DirectRelativeBit(4) },
  SmpInstructionData { instruction: ADC, mode: AccXIndexedDirect },
  SmpInstructionData { instruction: ADC, mode: AccAbsoluteX },
  SmpInstructionData { instruction: ADC, mode: AccAbsoluteY },
  SmpInstructionData { instruction: ADC, mode: AccYIndexedIndirect },
  SmpInstructionData { instruction: ADC, mode: DirectImmediate },
  SmpInstructionData { instruction: ADC, mode: IndirectXIndirectY },
  SmpInstructionData { instruction: SUBW, mode: YaDirect },
  SmpInstructionData { instruction: DEC, mode: XIndexedDirect },
  SmpInstructionData { instruction: DEC, mode: Acc },
  SmpInstructionData { instruction: MOV, mode: XSp },
  SmpInstructionData { instruction: DIV, mode: YaX },
  SmpInstructionData { instruction: XCN, mode: Acc },
  // 0xa0 - 0xaf
  SmpInstructionData { instruction: EI, mode: Implied },
  SmpInstructionData { instruction: TCALL, mode: TVector(0xA) },
  SmpInstructionData { instruction: SET5, mode: Direct },
  SmpInstructionData { instruction: BBS5, mode: DirectRelativeBit(5) },
  SmpInstructionData { instruction: SBC, mode: AccDirect},
  SmpInstructionData { instruction: SBC, mode: AccAbsolute },
  SmpInstructionData { instruction: SBC, mode: AccIndirectX },
  SmpInstructionData { instruction: SBC, mode: AccXIndexedIndirect },
  SmpInstructionData { instruction: SBC, mode: AccImmediate },
  SmpInstructionData { instruction: SBC, mode: DirectDirect },
  SmpInstructionData { instruction: MOV1, mode: CarryAbsoluteBit },
  SmpInstructionData { instruction: INC, mode: Direct },
  SmpInstructionData { instruction: INC, mode: Absolute },
  SmpInstructionData { instruction: CMP, mode: YImmediate },
  SmpInstructionData { instruction: POP, mode: Acc },
  SmpInstructionData { instruction: MOV, mode: IndirectIncrementXAcc},
  // 0xb0 - 0xbf
  SmpInstructionData { instruction: BCS, mode: PcRelative },
  SmpInstructionData { instruction: TCALL, mode: TVector(0xB) },
  SmpInstructionData { instruction: CLR5, mode: Direct },
  SmpInstructionData { instruction: BBC5, mode: DirectRelativeBit(5) },
  SmpInstructionData { instruction: SBC, mode: AccXIndexedDirect },
  SmpInstructionData { instruction: SBC, mode: AccAbsoluteX },
  SmpInstructionData { instruction: SBC, mode: AccAbsoluteY },
  SmpInstructionData { instruction: SBC, mode: AccYIndexedIndirect },
  SmpInstructionData { instruction: SBC, mode: DirectImmediate },
  SmpInstructionData { instruction: SBC, mode: IndirectXIndirectY },
  SmpInstructionData { instruction: MOVW, mode: YaDirect },
  SmpInstructionData { instruction: INC, mode: XIndexedDirect },
  SmpInstructionData { instruction: INC, mode: Acc },
  SmpInstructionData { instruction: MOV, mode: SpX },
  SmpInstructionData { instruction: DAS, mode: Acc },
  SmpInstructionData { instruction: MOV, mode: AccIndirectIncrementX  },
  // 0xc0 - 0xcf
  SmpInstructionData { instruction: DI, mode: Implied },
  SmpInstructionData { instruction: TCALL, mode: TVector(0xC) },
  SmpInstructionData { instruction: SET6, mode: Direct },
  SmpInstructionData { instruction: BBS6, mode: DirectRelativeBit(6) },
  SmpInstructionData { instruction: MOV, mode: DirectAcc },
  SmpInstructionData { instruction: MOV, mode: AbsoluteAcc },
  SmpInstructionData { instruction: MOV, mode: IndirectXAcc },
  SmpInstructionData { instruction: MOV, mode: XIndexedIndirectAcc },
  SmpInstructionData { instruction: CMP, mode: XImmediate },
  SmpInstructionData { instruction: MOV, mode: AbsoluteX },
  SmpInstructionData { instruction: MOV1, mode: AbsoluteBitCarry },
  SmpInstructionData { instruction: MOV, mode: DirectY },
  SmpInstructionData { instruction: MOV, mode: AbsoluteY },
  SmpInstructionData { instruction: MOV, mode: XImmediate },
  SmpInstructionData { instruction: POP, mode: X },
  SmpInstructionData { instruction: MUL, mode: Ya },
  // 0xd0 - 0xdf
  SmpInstructionData { instruction: BNE, mode: PcRelative },
  SmpInstructionData { instruction: TCALL, mode: TVector(0xD) },
  SmpInstructionData { instruction: CLR6, mode: PcRelative },
  SmpInstructionData { instruction: BBC6, mode: DirectRelativeBit(6) },
  SmpInstructionData { instruction: MOV, mode: XIndexedDirectAcc },
  SmpInstructionData { instruction: MOV, mode: AbsoluteXAcc },
  SmpInstructionData { instruction: MOV, mode: AbsoluteYAcc },
  SmpInstructionData { instruction: MOV, mode: YIndexedIndirectAcc },
  SmpInstructionData { instruction: MOV, mode: DirectX },
  SmpInstructionData { instruction: MOV, mode: YIndexedDirectX },
  SmpInstructionData { instruction: MOVW, mode: DirectYa },
  SmpInstructionData { instruction: MOV, mode: XIndexedDirectY },
  SmpInstructionData { instruction: DEC, mode: Y },
  SmpInstructionData { instruction: MOV, mode: AY },
  SmpInstructionData { instruction: CBNE, mode: XIndexedDirectRelative },
  SmpInstructionData { instruction: DAA, mode: Acc },
  // 0xe0 - 0xef
  SmpInstructionData { instruction: CLRV, mode: Implied },
  SmpInstructionData { instruction: TCALL, mode: TVector(0xE) },
  SmpInstructionData { instruction: SET7, mode: Direct },
  SmpInstructionData { instruction: BBS7, mode: DirectRelativeBit(7) },
  SmpInstructionData { instruction: MOV, mode: AccDirect},
  SmpInstructionData { instruction: MOV, mode: AccAbsolute },
  SmpInstructionData { instruction: MOV, mode: AccIndirectX },
  SmpInstructionData { instruction: MOV, mode: AccXIndexedIndirect },
  SmpInstructionData { instruction: MOV, mode: AccImmediate },
  SmpInstructionData { instruction: MOV, mode: XAbsolute },
  SmpInstructionData { instruction: NOT1, mode: CarryAbsoluteBit },
  SmpInstructionData { instruction: MOV, mode: YDirect },
  SmpInstructionData { instruction: MOV, mode: YAbsolute },
  SmpInstructionData { instruction: NOTC, mode: Implied },
  SmpInstructionData { instruction: POP, mode: Y },
  SmpInstructionData { instruction: SLEEP, mode: Implied },
  // 0xf0 - 0xff
  SmpInstructionData { instruction: BEQ, mode: PcRelative },
  SmpInstructionData { instruction: TCALL, mode: TVector(0xF) },
  SmpInstructionData { instruction: CLR7, mode: Direct },
  SmpInstructionData { instruction: BBC7, mode: DirectRelativeBit(7) },
  SmpInstructionData { instruction: MOV, mode: AccXIndexedDirect },
  SmpInstructionData { instruction: MOV, mode: AccAbsoluteX },
  SmpInstructionData { instruction: MOV, mode: AccAbsoluteY },
  SmpInstructionData { instruction: MOV, mode: AccYIndexedIndirect },
  SmpInstructionData { instruction: MOV, mode: XDirect },
  SmpInstructionData { instruction: MOV, mode: XYIndexedDirect },
  SmpInstructionData { instruction: MOV, mode: DirectDirect },
  SmpInstructionData { instruction: MOV, mode: YXIndexedDirect },
  SmpInstructionData { instruction: INC, mode: Y },
  SmpInstructionData { instruction: MOV, mode: YA },
  SmpInstructionData { instruction: DBNZ, mode: YRelative },
  SmpInstructionData { instruction: STOP, mode: Implied },
];
